/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.imagenesivanpr.vista;

import com.imagenesivanpr.modelo.Imagen;
import com.imagenesivanpr.control.ControlImagenes;
import java.awt.Component;
import java.awt.Image;
import java.io.File;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author dam2
 */
public class View extends javax.swing.JFrame {

    /**
     * Creates new form imagenes
     */
    private ControlImagenes control;

    public View() {
        initComponents();
        this.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        control = new ControlImagenes();
        popBlur.setText("Blur");
        popGreyScale.setText("Grey scale");
        fileChooser.setMultiSelectionEnabled(true);
        fileChooser.setAcceptAllFileFilterUsed(false);
        fileChooser.addChoosableFileFilter(new FileNameExtensionFilter("Images", "jpg", "png", "bmp", "gif"));
        imgPanel.setAlignmentX(Component.CENTER_ALIGNMENT);
        imgPanel.setAlignmentY(Component.CENTER_ALIGNMENT);
        imgPanel.setName("imgPanel");
        mFile.setName("mFile");
        mEdit.setName("mEdit");
        miAdd.setName("miAdd");
        miDelete.setName("miDel");
        bDer.setName("bDer");
        bIzq.setName("bIzq");
        fileChooser.setName("fileChooser");
        panelCarrusel.setName("pCarrusel");
        labImagenIzq.setName("labIzq");
        labImagenCen.setName("labCen");
        labImagenDer.setName("labDer");
        File fich = new File(".\\MyImages\\state");
        if (!fich.exists()) 
            fich.mkdirs();
        fich = new File(".\\MyImages\\images\\");
        if (!fich.exists()) 
            fich.mkdirs();
        fich = new File(".\\MyImages\\imageIcons\\");
        if (!fich.exists()) 
            fich.mkdirs();
        fich = new File(".\\MyImages\\greyScaleImages\\");
        if (!fich.exists()) 
            fich.mkdirs();
        fich = new File(".\\MyImages\\paintedImages\\");
        if (!fich.exists()) 
            fich.mkdirs();
        fich = new File(".\\MyImages\\blurImages\\");
        if (!fich.exists()) 
            fich.mkdirs();
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChooser = new javax.swing.JFileChooser();
        jPopupMenu1 = new javax.swing.JPopupMenu();
        popNormal = new javax.swing.JMenuItem();
        popBlur = new javax.swing.JMenuItem();
        popGreyScale = new javax.swing.JMenuItem();
        popPintar = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        imgPanel = new com.imagenesivanpr.vista.ImagenPanel();
        panelCarrusel = new javax.swing.JPanel();
        bIzq = new javax.swing.JButton();
        labImagenIzq = new javax.swing.JLabel();
        labImagenCen = new javax.swing.JLabel();
        labImagenDer = new javax.swing.JLabel();
        bDer = new javax.swing.JButton();
        menuBar1 = new javax.swing.JMenuBar();
        mFile = new javax.swing.JMenu();
        miLoad = new javax.swing.JMenuItem();
        miSave = new javax.swing.JMenuItem();
        miAdd = new javax.swing.JMenuItem();
        miDelete = new javax.swing.JMenuItem();
        mEdit = new javax.swing.JMenu();
        mNormal = new javax.swing.JMenuItem();
        mBlur = new javax.swing.JMenuItem();
        mGreyScale = new javax.swing.JMenuItem();
        mPintar = new javax.swing.JMenuItem();

        popNormal.setText("jMenuItem2");
        popNormal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popNormalActionPerformed(evt);
            }
        });
        jPopupMenu1.add(popNormal);

        popBlur.setText("jMenuItem1");
        popBlur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popBlurActionPerformed(evt);
            }
        });
        jPopupMenu1.add(popBlur);

        popGreyScale.setText("jMenuItem2");
        popGreyScale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popGreyScaleActionPerformed(evt);
            }
        });
        jPopupMenu1.add(popGreyScale);

        popPintar.setText("jMenuItem3");
        popPintar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popPintarActionPerformed(evt);
            }
        });
        jPopupMenu1.add(popPintar);

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.PAGE_AXIS));

        imgPanel.setAlignmentX(0.0F);
        imgPanel.setComponentPopupMenu(jPopupMenu1);
        imgPanel.setPreferredSize(new java.awt.Dimension(500, 500));

        javax.swing.GroupLayout imgPanelLayout = new javax.swing.GroupLayout(imgPanel);
        imgPanel.setLayout(imgPanelLayout);
        imgPanelLayout.setHorizontalGroup(
            imgPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 500, Short.MAX_VALUE)
        );
        imgPanelLayout.setVerticalGroup(
            imgPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 500, Short.MAX_VALUE)
        );

        getContentPane().add(imgPanel);

        java.awt.FlowLayout flowLayout1 = new java.awt.FlowLayout();
        flowLayout1.setAlignOnBaseline(true);
        panelCarrusel.setLayout(flowLayout1);

        bIzq.setText("<");
        bIzq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bIzqActionPerformed(evt);
            }
        });
        panelCarrusel.add(bIzq);

        labImagenIzq.setMaximumSize(new java.awt.Dimension(60, 40));
        labImagenIzq.setMinimumSize(new java.awt.Dimension(60, 40));
        labImagenIzq.setPreferredSize(new java.awt.Dimension(120, 80));
        panelCarrusel.add(labImagenIzq);

        labImagenCen.setMaximumSize(new java.awt.Dimension(60, 40));
        labImagenCen.setMinimumSize(new java.awt.Dimension(60, 40));
        labImagenCen.setPreferredSize(new java.awt.Dimension(120, 80));
        panelCarrusel.add(labImagenCen);

        labImagenDer.setMaximumSize(new java.awt.Dimension(60, 40));
        labImagenDer.setMinimumSize(null);
        labImagenDer.setPreferredSize(new java.awt.Dimension(120, 80));
        panelCarrusel.add(labImagenDer);

        bDer.setText(">");
        bDer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bDerActionPerformed(evt);
            }
        });
        panelCarrusel.add(bDer);

        getContentPane().add(panelCarrusel);

        mFile.setText("File");

        miLoad.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        miLoad.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/dir.png"))); // NOI18N
        miLoad.setText("Load");
        miLoad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miLoadActionPerformed(evt);
            }
        });
        mFile.add(miLoad);

        miSave.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        miSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/save.png"))); // NOI18N
        miSave.setText("Save");
        miSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miSaveActionPerformed(evt);
            }
        });
        mFile.add(miSave);

        miAdd.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        miAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/add.png"))); // NOI18N
        miAdd.setText("Add");
        miAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miAddActionPerformed(evt);
            }
        });
        mFile.add(miAdd);

        miDelete.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_DELETE, 0));
        miDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/del.png"))); // NOI18N
        miDelete.setText("Delete");
        miDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miDeleteActionPerformed(evt);
            }
        });
        mFile.add(miDelete);

        menuBar1.add(mFile);

        mEdit.setText("Edit");

        mNormal.setText("Normal");
        mNormal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mNormalActionPerformed(evt);
            }
        });
        mEdit.add(mNormal);

        mBlur.setText("Blur");
        mBlur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mBlurActionPerformed(evt);
            }
        });
        mEdit.add(mBlur);

        mGreyScale.setText("Grey scale");
        mGreyScale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mGreyScaleActionPerformed(evt);
            }
        });
        mEdit.add(mGreyScale);

        mPintar.setText("Pintar");
        mPintar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mPintarActionPerformed(evt);
            }
        });
        mEdit.add(mPintar);

        menuBar1.add(mEdit);

        setJMenuBar(menuBar1);

        getAccessibleContext().setAccessibleParent(jPopupMenu1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public ControlImagenes getControl(){
        return control;
    }
    
    public ImagenPanel getPanelImg(){
        return imgPanel;
    }
    
    private void miLoadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miLoadActionPerformed
        control.loadImages();
        showOnCarrusel();
    }//GEN-LAST:event_miLoadActionPerformed

    private void miSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miSaveActionPerformed
        control.saveImages();
        JOptionPane.showMessageDialog(this, "Saved!","State",JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_miSaveActionPerformed

    private void miAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miAddActionPerformed
        int valor = fileChooser.showOpenDialog(this);
        if (valor == 0) {
            File[] path=fileChooser.getSelectedFiles();
            for(File fich: path){
                control.addImg(new Imagen(fich.getPath()));
            }
            if (control.getTamano() != 0) {
                showOnCarrusel();
            }
        }
    }//GEN-LAST:event_miAddActionPerformed

    private void bIzqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bIzqActionPerformed
        if(control.getTamano()>0){
            control.pasarImagenPrevia();
            showOnCarrusel();
        }
    }//GEN-LAST:event_bIzqActionPerformed

    private void bDerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bDerActionPerformed
        if(control.getTamano()>0){
            control.pasarSiguienteImagen();
            showOnCarrusel();
        }
    }//GEN-LAST:event_bDerActionPerformed

    private void miDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miDeleteActionPerformed
        labImagenIzq.setIcon(null);
        labImagenDer.setIcon(null);
        labImagenCen.setIcon(null);
        if(control.getTamano()<=0){
            labImagenDer.setIcon(new ImageIcon((new ImageIcon("src\\main\\resources\\otherImages\\imageNotAv.jpg")).getImage().getScaledInstance(120, 80, Image.SCALE_DEFAULT)));
            labImagenIzq.setIcon(new ImageIcon((new ImageIcon("src\\main\\resources\\otherImages\\imageNotAv.jpg")).getImage().getScaledInstance(120, 80, Image.SCALE_DEFAULT)));
            labImagenCen.setIcon(new ImageIcon((new ImageIcon("src\\main\\resources\\otherImages\\imageNotAv.jpg")).getImage().getScaledInstance(120, 80, Image.SCALE_DEFAULT)));
            imgPanel.setImage(null);
        }else{
            control.getCarrusel().rmvImg();
            showOnCarrusel();
        }
    }//GEN-LAST:event_miDeleteActionPerformed

    private void mGreyScaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mGreyScaleActionPerformed
        control.getCurrentImage().setTipo(3);
        showOnCarrusel();
    }//GEN-LAST:event_mGreyScaleActionPerformed

    private void mBlurActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mBlurActionPerformed
        control.getCurrentImage().setTipo(2);
        showOnCarrusel();
    }//GEN-LAST:event_mBlurActionPerformed

    private void popBlurActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popBlurActionPerformed
        control.getCurrentImage().setTipo(2);
        showOnCarrusel();
    }//GEN-LAST:event_popBlurActionPerformed

    private void popGreyScaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popGreyScaleActionPerformed
        control.getCurrentImage().setTipo(3);
        showOnCarrusel();
    }//GEN-LAST:event_popGreyScaleActionPerformed

    private void mNormalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mNormalActionPerformed
        control.getCurrentImage().setTipo(1);
        showOnCarrusel();
    }//GEN-LAST:event_mNormalActionPerformed

    private void popNormalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popNormalActionPerformed
        control.getCurrentImage().setTipo(1);
        showOnCarrusel();
    }//GEN-LAST:event_popNormalActionPerformed

    private void popPintarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popPintarActionPerformed
        control.getCurrentImage().setTipo(4);
        showOnCarrusel();
    }//GEN-LAST:event_popPintarActionPerformed

    private void mPintarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mPintarActionPerformed
        control.getCurrentImage().setTipo(4);
        showOnCarrusel();
    }//GEN-LAST:event_mPintarActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        if (JOptionPane.showConfirmDialog(this,
                "Are you sure you want to close this window?", "Really closing?",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE) == JOptionPane.YES_OPTION) {
            dispose();
        }
    }//GEN-LAST:event_formWindowClosing
    
    public void showOnCarrusel() {
        ImageIcon imgNdScaled = new ImageIcon((new ImageIcon("src\\main\\resources\\otherImages\\imageNotAv.jpg")).getImage().getScaledInstance(120, 80, Image.SCALE_DEFAULT));
        switch (control.getTamano()){
            default:
                labImagenIzq.setIcon(control.getResizedIcon(control.getPreviousImage().getPathIcon()));
            case 2:
                labImagenDer.setIcon(control.getResizedIcon(control.getNextImage().getPathIcon()));
            case 1:
                labImagenCen.setIcon(control.getResizedIcon(control.getCurrentImage().getPathIcon()));
        }
        switch (control.getTamano()) {
            case 1:
                labImagenDer.setIcon(imgNdScaled);
                labImagenIzq.setIcon(imgNdScaled);
                break;
            case 2:
                labImagenIzq.setIcon(imgNdScaled);
                break;
        }
        switch(control.getCurrentImage().getTipo()){
            case 1:
                mNormal.setSelected(true);
                popNormal.setSelected(true);
                break;
            case 2:
                mBlur.setSelected(true);
                popBlur.setSelected(true);
                break;
            case 3:
                mGreyScale.setSelected(true);
                popGreyScale.setSelected(true);
                break;
            case 4:
                mPintar.setSelected(true);
                popPintar.setSelected(true);
                break;
        }
        imgPanel.setImage(control.getResizedImage(control.getCurrentImage().getPathImage()));
            
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new View().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bDer;
    private javax.swing.JButton bIzq;
    private javax.swing.JFileChooser fileChooser;
    private com.imagenesivanpr.vista.ImagenPanel imgPanel;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JLabel labImagenCen;
    private javax.swing.JLabel labImagenDer;
    private javax.swing.JLabel labImagenIzq;
    private javax.swing.JMenuItem mBlur;
    private javax.swing.JMenu mEdit;
    private javax.swing.JMenu mFile;
    private javax.swing.JMenuItem mGreyScale;
    private javax.swing.JMenuItem mNormal;
    private javax.swing.JMenuItem mPintar;
    private javax.swing.JMenuBar menuBar1;
    private javax.swing.JMenuItem miAdd;
    private javax.swing.JMenuItem miDelete;
    private javax.swing.JMenuItem miLoad;
    private javax.swing.JMenuItem miSave;
    private javax.swing.JPanel panelCarrusel;
    private javax.swing.JMenuItem popBlur;
    private javax.swing.JMenuItem popGreyScale;
    private javax.swing.JMenuItem popNormal;
    private javax.swing.JMenuItem popPintar;
    // End of variables declaration//GEN-END:variables
}